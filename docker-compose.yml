services:

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

  worker:
    build:
      context: .
    container_name: celery_worker
    command: celery -A celery_app worker --loglevel=info
    depends_on:
      - redis
    environment:
      CELERY_BROKER_URL: redis://redis:6379/0
      BOT_TOKEN: ${BOT_TOKEN}
      TELEGRAM_CHANNEL_ID: ${TELEGRAM_CHANNEL_ID}
      TELEGRAM_POST_INTERVAL: ${TELEGRAM_POST_INTERVAL}
      FETCH_BATCH_SIZE: ${FETCH_BATCH_SIZE}
      FETCH_DELAY: ${FETCH_DELAY}
    volumes:
      - .:/app
    restart: unless-stopped

  beat:
    build:
      context: .
    container_name: celery_beat
    command: celery -A celery_app beat --loglevel=info
    depends_on:
      - redis
    environment:
      CELERY_BROKER_URL: redis://redis:6379/0
      BOT_TOKEN: ${BOT_TOKEN}
      TELEGRAM_CHANNEL_ID: ${TELEGRAM_CHANNEL_ID}
      TELEGRAM_POST_INTERVAL: ${TELEGRAM_POST_INTERVAL}
      FETCH_BATCH_SIZE: ${FETCH_BATCH_SIZE}
      FETCH_DELAY: ${FETCH_DELAY}
    volumes:
      - .:/app
    restart: unless-stopped

  bot:
    build:
      context: .
    container_name: telegram_bot
    command: python bot.py
    depends_on:
      - redis
    environment:
      BOT_TOKEN: ${BOT_TOKEN}
      TELEGRAM_CHANNEL_ID: ${TELEGRAM_CHANNEL_ID}
      TELEGRAM_POST_INTERVAL: ${TELEGRAM_POST_INTERVAL}
      FETCH_BATCH_SIZE: ${FETCH_BATCH_SIZE}
      FETCH_DELAY: ${FETCH_DELAY}
      CELERY_BROKER_URL: redis://redis:6379/0
    volumes:
      - .:/app
    restart: unless-stopped

volumes:
  redis_data:
